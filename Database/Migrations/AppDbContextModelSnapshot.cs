// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parqueadero_Back.Database;

#nullable disable

namespace Parqueadero_Back.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Parqueadero_Back.Models.Cupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Cupo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = true
                        },
                        new
                        {
                            Id = 2,
                            Estado = true
                        },
                        new
                        {
                            Id = 3,
                            Estado = true
                        },
                        new
                        {
                            Id = 4,
                            Estado = false
                        },
                        new
                        {
                            Id = 5,
                            Estado = false
                        },
                        new
                        {
                            Id = 6,
                            Estado = false
                        },
                        new
                        {
                            Id = 7,
                            Estado = false
                        },
                        new
                        {
                            Id = 8,
                            Estado = false
                        },
                        new
                        {
                            Id = 9,
                            Estado = false
                        },
                        new
                        {
                            Id = 10,
                            Estado = false
                        },
                        new
                        {
                            Id = 11,
                            Estado = false
                        },
                        new
                        {
                            Id = 12,
                            Estado = false
                        },
                        new
                        {
                            Id = 13,
                            Estado = false
                        },
                        new
                        {
                            Id = 14,
                            Estado = false
                        },
                        new
                        {
                            Id = 15,
                            Estado = false
                        });
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Costo")
                        .HasColumnType("float");

                    b.Property<int>("CupoId")
                        .HasColumnType("int");

                    b.Property<double?>("Duracion")
                        .HasColumnType("float");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CupoId");

                    b.HasIndex("VehiculoId");

                    b.ToTable("Reserva");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CupoId = 1,
                            Estado = true,
                            FechaIngreso = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaReserva = new DateTime(2025, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehiculoId = 1
                        },
                        new
                        {
                            Id = 2,
                            CupoId = 2,
                            Estado = true,
                            FechaIngreso = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaReserva = new DateTime(2025, 10, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehiculoId = 2
                        },
                        new
                        {
                            Id = 3,
                            CupoId = 3,
                            Estado = true,
                            FechaIngreso = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaReserva = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehiculoId = 3
                        },
                        new
                        {
                            Id = 4,
                            Costo = 96000.0,
                            CupoId = 4,
                            Duracion = 24.0,
                            Estado = true,
                            FechaIngreso = new DateTime(2025, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaReserva = new DateTime(2025, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaSalida = new DateTime(2025, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VehiculoId = 6
                        });
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreRol = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            NombreRol = "Cliente"
                        },
                        new
                        {
                            Id = 3,
                            NombreRol = "Operador"
                        });
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Soporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Soporte");
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificadorUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Contrasena = "Ow4CnX0NoSHlhq96QYGPFQ==",
                            IdentificadorUsuario = "CamiloAPerezP",
                            NombreCompleto = "Camilo Andres Perez Parra",
                            RolId = 2
                        },
                        new
                        {
                            Id = 2,
                            Contrasena = "eSuwoPwEaN2wXV/NfQt/lA==",
                            IdentificadorUsuario = "JhoanaECifuentes",
                            NombreCompleto = "Jhoana Estefania Cifuentes",
                            RolId = 2
                        },
                        new
                        {
                            Id = 3,
                            Contrasena = "UsPN3lexcl9LyHlIHuw6ew==",
                            IdentificadorUsuario = "NelsonAMunozS",
                            NombreCompleto = "Nelson Andres Muñoz Salinas",
                            RolId = 1
                        },
                        new
                        {
                            Id = 4,
                            Contrasena = "ouj96EN+PovtRy940zJAIA==",
                            IdentificadorUsuario = "SilenidSSarmiento",
                            NombreCompleto = "Silenid Salinas Sarmiento",
                            RolId = 2
                        });
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cilindraje")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Vehiculo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cilindraje = 125,
                            Placa = "SBX-78F",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cilindraje = 200,
                            Placa = "ERF-23G",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            Cilindraje = 400,
                            Placa = "FGH-66H",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            Cilindraje = 125,
                            Placa = "AAE-34F",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            Cilindraje = 200,
                            Placa = "GJK-45B",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 6,
                            Cilindraje = 250,
                            Placa = "FCX-66B",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Reserva", b =>
                {
                    b.HasOne("Parqueadero_Back.Models.Cupo", "Cupo")
                        .WithMany()
                        .HasForeignKey("CupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parqueadero_Back.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cupo");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Soporte", b =>
                {
                    b.HasOne("Parqueadero_Back.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Usuario", b =>
                {
                    b.HasOne("Parqueadero_Back.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Parqueadero_Back.Models.Vehiculo", b =>
                {
                    b.HasOne("Parqueadero_Back.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
